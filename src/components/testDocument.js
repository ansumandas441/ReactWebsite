import DOMPurify from 'dompurify';
const dirtyHtml = '<html><head><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type="text/css">@import url(https://themes.googleusercontent.com/fonts/css?kit=XGMkxXUZTA64h2imyzu79g);.lst-kix_va9tqvoojdgg-4>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-4}.lst-kix_va9tqvoojdgg-1>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-1}ol.lst-kix_va9tqvoojdgg-3.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-3 0}.lst-kix_va9tqvoojdgg-7>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-7}.lst-kix_va9tqvoojdgg-2>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-2,lower-roman) ". "}.lst-kix_va9tqvoojdgg-0>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-0,decimal) ". "}.lst-kix_va9tqvoojdgg-1>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-1,lower-latin) ". "}ol.lst-kix_va9tqvoojdgg-8.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-8 0}ol.lst-kix_va9tqvoojdgg-6.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-6 0}ol.lst-kix_va9tqvoojdgg-1{list-style-type:none}ol.lst-kix_va9tqvoojdgg-0{list-style-type:none}.lst-kix_va9tqvoojdgg-2>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-2}.lst-kix_va9tqvoojdgg-6>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-6}ol.lst-kix_va9tqvoojdgg-1.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-1 0}.lst-kix_va9tqvoojdgg-0>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-0}ol.lst-kix_va9tqvoojdgg-7{list-style-type:none}ol.lst-kix_va9tqvoojdgg-6{list-style-type:none}.lst-kix_va9tqvoojdgg-3>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-3}ol.lst-kix_va9tqvoojdgg-4.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-4 0}.lst-kix_va9tqvoojdgg-5>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-5}ol.lst-kix_va9tqvoojdgg-8{list-style-type:none}ol.lst-kix_va9tqvoojdgg-3{list-style-type:none}ol.lst-kix_va9tqvoojdgg-2{list-style-type:none}.lst-kix_va9tqvoojdgg-8>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-8,lower-roman) ". "}li.li-bullet-0:before{margin-left:-18pt;white-space:nowrap;display:inline-block;min-width:18pt}ol.lst-kix_va9tqvoojdgg-5{list-style-type:none}ol.lst-kix_va9tqvoojdgg-4{list-style-type:none}.lst-kix_va9tqvoojdgg-8>li{counter-increment:lst-ctn-kix_va9tqvoojdgg-8}ol.lst-kix_va9tqvoojdgg-0.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-0 0}.lst-kix_va9tqvoojdgg-6>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-6,decimal) ". "}.lst-kix_va9tqvoojdgg-7>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-7,lower-latin) ". "}ol.lst-kix_va9tqvoojdgg-5.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-5 0}ol.lst-kix_va9tqvoojdgg-7.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-7 0}.lst-kix_va9tqvoojdgg-3>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-3,decimal) ". "}ol.lst-kix_va9tqvoojdgg-2.start{counter-reset:lst-ctn-kix_va9tqvoojdgg-2 0}.lst-kix_va9tqvoojdgg-4>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-4,lower-latin) ". "}.lst-kix_va9tqvoojdgg-5>li:before{content:"" counter(lst-ctn-kix_va9tqvoojdgg-5,lower-roman) ". "}ol{margin:0;padding:0}table td,table th{padding:0}.c1{margin-left:36pt;padding-top:21pt;padding-left:0pt;padding-bottom:21pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c5{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left;height:11pt}.c0{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Arial";font-style:normal}.c2{padding-top:21pt;padding-bottom:21pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c6{background-color:#ffffff;max-width:451.4pt;padding:72pt 72pt 72pt 72pt}.c3{font-family:"Roboto Mono";color:#188038;font-weight:400}.c4{padding:0;margin:0}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c6 doc-content"><p class="c2"><span class="c0">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;To minimize potential security risks when dealing with user-generated or external HTML content, you should follow these best practices:</span></p><ol class="c4 lst-kix_va9tqvoojdgg-0 start" start="1"><li class="c1 li-bullet-0"><span class="c0">Sanitize and Validate: Before rendering or storing HTML content, use a trusted HTML sanitizer library to remove any potentially malicious or unsafe code. This helps prevent cross-site scripting (XSS) attacks. Libraries like DOMPurify and sanitize-html can be used for this purpose.</span></li><li class="c1 li-bullet-0"><span class="c0">Whitelist Allowed Tags and Attributes: Define a whitelist of allowed HTML tags and attributes that your application supports. Strip out any tags or attributes that are not on the whitelist. This prevents users from injecting unwanted or potentially harmful elements into the content. Libraries like sanitize-html allow you to specify a list of allowed tags and attributes.</span></li><li class="c1 li-bullet-0"><span>Avoid using </span><span class="c3">dangerouslySetInnerHTML</span><span>&nbsp;when possible: The </span><span class="c3">dangerouslySetInnerHTML</span><span class="c0">&nbsp;property can be useful for rendering trusted content, but it should be used with caution. Whenever possible, consider alternative methods for rendering user-generated HTML content. For example, you can use a Markdown parser like markdown-it or a rich text editor with built-in security measures.</span></li><li class="c1 li-bullet-0"><span class="c0">Content Security Policy (CSP): Implement a Content Security Policy for your web application. CSP allows you to specify which resources (e.g., scripts, stylesheets) are allowed to be loaded and executed. It helps mitigate the impact of XSS attacks by blocking the execution of unauthorized scripts.</span></li><li class="c1 li-bullet-0"><span class="c0">Regular Updates: Keep all libraries and dependencies used for HTML sanitization and validation up to date. Security vulnerabilities in these libraries can be patched over time, and using the latest versions helps ensure you have the most secure code.</span></li><li class="c1 li-bullet-0"><span class="c0">Input Validation: Validate and sanitize any user-generated input on the server-side as well. Even if you have client-side protections, server-side validation acts as an additional layer of security.</span></li><li class="c1 li-bullet-0"><span class="c0">User Education: Educate your users about the potential risks associated with submitting HTML content. Encourage them to report any suspicious or inappropriate content they encounter.</span></li></ol><p class="c2"><span class="c0">&nbsp; &nbsp; &nbsp;By following these practices, you can significantly reduce the risk of security vulnerabilities when dealing with user-generated or external HTML content.</span></p><p class="c5"><span class="c0"></span></p></body></html>';
const cleanHtml = DOMPurify.sanitize(dirtyHtml);

export default cleanHtml;